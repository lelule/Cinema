/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import dao.DAOFilm;
import dao.DAOHeure;
import dao.DAOJour;
import dao.DAOSalle;
import dao.DAOSeance;
import factory.Factory;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import model.TableModelSeances;
import transferObject.Jour;
import transferObject.Salle;
import transferObject.Seance;

/**
 *
 * @author Ludo
 */
public class JIFSeances extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFSeances
     */
    public JIFSeances() {
        initComponents();
        fillComponents();
        refreshModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSeance = new JTable(mySeanceModel);
        jButtonSupp = new javax.swing.JButton();
        jButtonModif = new javax.swing.JButton();
        jButtonAjout = new javax.swing.JButton();
        jTextTitre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboDebut = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboFin = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboSalle = new javax.swing.JComboBox();

        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(500, 500));
        setVisible(true);

        jTableSeance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSeanceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSeance);

        jButtonSupp.setText("Supprimer");
        jButtonSupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuppActionPerformed(evt);
            }
        });

        jButtonModif.setText("Modifier");
        jButtonModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifActionPerformed(evt);
            }
        });

        jButtonAjout.setText("Ajouter");
        jButtonAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjoutActionPerformed(evt);
            }
        });

        jTextTitre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextTitreKeyReleased(evt);
            }
        });

        jLabel1.setText("Titre");

        jLabel2.setText("Du:");

        jComboDebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboDebutActionPerformed(evt);
            }
        });

        jLabel3.setText("Au:");

        jComboFin.setPreferredSize(new java.awt.Dimension(60, 22));
        jComboFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboFinActionPerformed(evt);
            }
        });

        jLabel4.setText("Salle");

        jComboSalle.setPreferredSize(new java.awt.Dimension(90, 22));
        jComboSalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(jButtonAjout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonModif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSupp)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboDebut, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboFin, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSupp)
                    .addComponent(jButtonModif)
                    .addComponent(jButtonAjout))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjoutActionPerformed
        // TODO add your handling code here:
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDSeanceInsert(parent, "INSERTION D'UNE SEANCE");
        refreshModel();
    }//GEN-LAST:event_jButtonAjoutActionPerformed

    private void jButtonSuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuppActionPerformed
        // TODO add your handling code here:
        if (jTableSeance.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer " +
                    mySeanceModel.getValueAt(jTableSeance.getSelectedRow(),0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION){
                daoSea.deleteSeance(((int)mySeanceModel.getValueAt(jTableSeance.getSelectedRow(),0)));
                // après la suppression : rafraîchir les données en relisant la BD
                refreshModel();
            }
            
        }
    }//GEN-LAST:event_jButtonSuppActionPerformed

    private void jButtonModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifActionPerformed
        // TODO add your handling code here:
        if (jTableSeance.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            Seance s=mySeanceModel.getMyList(jTableSeance.getSelectedRow());
            
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDSeanceUpdate(parent, "MODIFICATION D'UNE SEANCE",s);
            refreshModel();
        }
    }//GEN-LAST:event_jButtonModifActionPerformed

    private void jTableSeanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSeanceMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2) {
        /*System.out.println("double clic sur " + jTableApp.rowAtPoint(evt.getPoint()) + " " +
            jTableApp.columnAtPoint(evt.getPoint()));*/
     
        // renvoie l'objet Appareil à passer en paramètre
            Seance s =mySeanceModel.getMyList(jTableSeance.getSelectedRow());

        // récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDSeanceUpdate(parent, "MODIFICATION D'UNE SEANCE", s);

        // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
        }
    }//GEN-LAST:event_jTableSeanceMouseClicked

    private void jComboDebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboDebutActionPerformed
        // TODO add your handling code here:
        refreshModel();
    }//GEN-LAST:event_jComboDebutActionPerformed

    private void jComboFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboFinActionPerformed
        // TODO add your handling code here:
        if(jComboFin.getSelectedIndex()<jComboDebut.getSelectedIndex()){
            jComboFin.setSelectedIndex(jComboDebut.getSelectedIndex());
        }
        refreshModel();
    }//GEN-LAST:event_jComboFinActionPerformed

    private void jComboSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSalleActionPerformed
        // TODO add your handling code here:
        refreshModel();
    }//GEN-LAST:event_jComboSalleActionPerformed

    private void jTextTitreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTitreKeyReleased
        // TODO add your handling code here:
        refreshModel();
    }//GEN-LAST:event_jTextTitreKeyReleased
    
    private void refreshModel() {
        Jour debut=(Jour)jComboDebut.getSelectedItem();
        Jour fin=(Jour)jComboFin.getSelectedItem();
        Salle s=(Salle)jComboSalle.getSelectedItem();
        String recherche=jTextTitre.getText().toUpperCase();
        if(debut !=null && fin!=null && s!=  null){
            mySeanceModel.setMyList(daoSea.selectSeances(recherche,debut,fin,s));
        }
    }
    
    private void fillComponents()
    {
        ArrayList <Jour> listeJours = daoJour.selectJours();
        for (Jour j: listeJours){
            jComboDebut.addItem(j);
            jComboFin.addItem(j);
        }
        jComboFin.setSelectedIndex(jComboFin.getItemCount()-1);
        ArrayList <Salle> listeSalle = daoSalle.selectSalles();
        listeSalle.add(0,new Salle(0,"*",0));
        for (Salle s: listeSalle){
            jComboSalle.addItem(s);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjout;
    private javax.swing.JButton jButtonModif;
    private javax.swing.JButton jButtonSupp;
    private javax.swing.JComboBox jComboDebut;
    private javax.swing.JComboBox jComboFin;
    private javax.swing.JComboBox jComboSalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSeance;
    private javax.swing.JTextField jTextTitre;
    // End of variables declaration//GEN-END:variables
    private DAOSeance daoSea = Factory.getDAOSeance();
    private DAOJour daoJour= Factory.getDAOJour();
    private DAOSalle daoSalle = Factory.getDAOSalle();
    private TableModelSeances mySeanceModel = new TableModelSeances(daoSea.selectSeances());

    
}
