/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import dao.DAOFilm;
import factory.Factory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import model.TableModelFilms;
import transferObject.Film;

/**
 *
 * @author Ludo
 */
public class JIFFilms extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFFilms
     */
    public JIFFilms() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFilm = new JTable(myFilmModel);
        jButtonSupp = new javax.swing.JButton();
        jButtonModif = new javax.swing.JButton();
        jButtonAjout = new javax.swing.JButton();

        setTitle("Films");
        setVisible(true);

        jTableFilm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFilmMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableFilm);

        jButtonSupp.setText("Supprimer");
        jButtonSupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuppActionPerformed(evt);
            }
        });

        jButtonModif.setText("Modifier");
        jButtonModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifActionPerformed(evt);
            }
        });

        jButtonAjout.setText("Ajouter");
        jButtonAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(131, Short.MAX_VALUE)
                .addComponent(jButtonAjout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonModif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSupp)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSupp)
                    .addComponent(jButtonModif)
                    .addComponent(jButtonAjout))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjoutActionPerformed
        // TODO add your handling code here:
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDFilmInsert(parent, "INSERTION D'UN FILM");
        refreshModel();
        
        
    }//GEN-LAST:event_jButtonAjoutActionPerformed

    private void jButtonModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifActionPerformed
        // TODO add your handling code here:
        if (jTableFilm.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            Film f=myFilmModel.getMyList(jTableFilm.getSelectedRow());
            
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDFilmUpdate(parent, "MODIFICATION D'UN FILM",f);
            refreshModel();
        }
    }//GEN-LAST:event_jButtonModifActionPerformed

    private void jButtonSuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuppActionPerformed
        // TODO add your handling code here:
        if (jTableFilm.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer " +
                    myFilmModel.getValueAt(jTableFilm.getSelectedRow(),0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION){
                daoApp.deleteAppareil((int)myFilmModel.getValueAt(jTableFilm.getSelectedRow(),0));
                // après la suppression : rafraîchir les données en relisant la BD
                refreshModel();
            }
            
        }
    }//GEN-LAST:event_jButtonSuppActionPerformed

    private void jTableFilmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFilmMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2) {
        /*System.out.println("double clic sur " + jTableApp.rowAtPoint(evt.getPoint()) + " " +
            jTableApp.columnAtPoint(evt.getPoint()));*/
     
        // renvoie l'objet Appareil à passer en paramètre
            Film f =myFilmModel.getMyList(jTableFilm.getSelectedRow());

        // récupère la JFrame parente
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDFilmUpdate(parent, "MODIFICATION D'APPAREIL", f);

        // après la modification : rafraîchir les données en relisant la BD
        refreshModel();
    }
    }//GEN-LAST:event_jTableFilmMouseClicked

    private void refreshModel() {
        myFilmModel.setMyList(daoApp.selectFilms());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjout;
    private javax.swing.JButton jButtonModif;
    private javax.swing.JButton jButtonSupp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableFilm;
    // End of variables declaration//GEN-END:variables
    private DAOFilm daoApp = Factory.getDAOFilm();
    private TableModelFilms myFilmModel = new TableModelFilms(daoApp.selectFilms());

    
}
